@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
            <i class="fa-solid fa-circle-user fa-sm mr-1"></i>
            Hello @UserManager.GetUserName(User)! - 
            @if (Admins.admins.Contains(@UserManager.GetUserName(User)))
            {
                <span>ADMIN</span>
            }
            else{
                <span>MODELER</span>
            }
        </a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link logout text-white"><i class="fa-solid fa-door-open fa-sm mr-1"></i>Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register"><i class="fa-solid fa-user-plus fa-sm mr-1"></i>Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login"><i class="fa-solid fa-door-closed fa-sm mr-1"></i>Login</a>
    </li>
}
